üé≥ Las variables son referencias a un espacio en memoria.
üé© Los navegadores web usan dos tipos de memorias: Stack y Heap.
üìÅ La memoria Stack es muy r√°pida, pero sin tanto espacio. Aqu√≠ se guardan los valores primitivos (booleanos, strings, n√∫meros‚Ä¶).
üå™ La memoria Heap es m√°s lenta, pero permite guardar enormes cantidades de informaci√≥n (son como los tornados: grandes, lentos y desordenados). En esta memoria guardamos los valores de los objetos ({...}).


JSON.stringify()
El m√©todo JSON.stringify() convierte un objeto o valor de JavaScript en una cadena JSON, reemplazando opcionalmente valores si se especifica una funci√≥n de reemplazo u opcionalmente incluyendo solo las propiedades especificadas si se especifica una matriz de reemplazo.

JSON.parse()
El m√©todo JSON.parse() analiza una cadena de texto (string) como JSON, transformando opcionalmente el valor producido por el an√°lisis.


**RORO **= RO -> Recibir un objeto, RO -> Retornar un objeto
Dentro de una funci√≥n, recibimos un solo par√°metro que es un objecto, el cual internamente contiene varias propiedades, con las cuales retornara otro nuevo objeto.


For ‚Ä¶ in devuelve los indices o las llaves del array u objeto que esta siendo iterado.
For ‚Ä¶ of devuelve ya directamente los valores.
.
Personalmente, por esa misma raz√≥n casi siempre me gusta dejar exclusivamente el for ... in para objetos y el for ... of para arrays.